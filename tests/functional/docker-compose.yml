version: '3.8'

services:
  server:
    restart: always
    image: movies-api-yandex
    build:
      context: ../../.
      dockerfile: Dockerfile
    env_file:
      - $ENV
    expose:
      - 8001
    volumes:
      - ./../../src:/app/src
      - .:/app/tests/functional
    command: >
      sh -c "
      cd /app/src/ &&
      python3.10 -m uvicorn main:app --reload --host 0.0.0.0 --port 8001
      "
    depends_on:
      redis-sentinel:
        condition: service_healthy
      redis:
        condition: service_started
      redis-slave:
        condition: service_started
      elasticsearch:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fastapi.rule=Host(`api.localhost`)"

  redis-sentinel:
    image: bitnami/redis-sentinel:6.2.7
    restart: always
    environment:
      - REDIS_MASTER_SET=${NMA_REDIS_MASTER_SET}
      - REDIS_MASTER_PASSWORD=${NMA_REDIS_PASSWORD}
    depends_on:
      - redis
      - redis-slave
    expose:
      - 26379
    healthcheck:
      test: redis-cli -p 26379 ping || exit 1
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: bitnami/redis:6.2.7
    restart: always
    environment:
      - REDIS_REPLICATION_MODE=master
      - REDIS_PASSWORD=${NMA_REDIS_PASSWORD}
    ports:
      - "6379"

  redis-slave:
    image: bitnami/redis:6.2.7
    restart: always
    environment:
      - REDIS_REPLICATION_MODE=slave
      - REDIS_MASTER_HOST=redis
      - REDIS_MASTER_PASSWORD=${NMA_REDIS_PASSWORD}
      - REDIS_PASSWORD=${NMA_REDIS_PASSWORD}
    ports:
      - "6379"
    depends_on:
      - redis

  elasticsearch:
    image: elasticsearch:7.17.2
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ports:
      - "9200:9200"
    healthcheck:
      test: curl -u elastic:elastic -s -f elasticsearch:9200/_cat/health >/dev/null || exit 1
      interval: 5s
      timeout: 5s
      retries: 5

  traefik:
    image: traefik:v2.7
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "8008:80"
      - "8081:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    depends_on:
      - server

  test:
    restart: on-failure
    image: movies-api-yandex
    env_file:
      - $ENV
    volumes:
      - ./../../src:/app/src
      - ./../../tests:/app/tests
      - .:/app/tests/functional
    command: >
      sh -c "cd /app
      && python /app/tests/functional/utils/wait_for_elastic.py
      && python /app/tests/functional/utils/wait_for_redis_cache.py
      && python -m pytest tests/functional
      "
    depends_on:
      - redis-sentinel
      - redis
      - redis-slave
      - traefik
      - server
      - elasticsearch
